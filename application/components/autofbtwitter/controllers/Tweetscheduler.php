<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');//scheduler controllerclass Tweetscheduler extends Comp{	protected $m_view = 'user/dashboard';	public function __construct() {				parent::__construct();		//FAIL			$this->need_login();	}	/*	 *controllers	 */  	 	function index($offset=0){							$this->data['title'] = 'Schedule Tweets';			$this->model('MSchedule');							$conf['base_url'] = site_url('tweetscheduler/index');		$actions[] = array('Delete',site_url('tweetscheduler/delete'));				$actions[] = array('Edit',site_url('tweetscheduler/edit'));			$cols[] = array('Username','username',200,'scope="col" class="rounded-company"','asc');		$cols[] = array('Date ','schedule_date',50,'scope="col" class="rounded"','asc');						$cols[] = array('Time','schedule_hhmm',50,'scope="col" class="rounded"');						$cols[] = array('Timezone','schedule_tz',100,'scope="col" class="rounded"');				$cols[] = array('Message','message',100,'scope="col" class="rounded"');				$cols[] = array('Status','status',100,'scope="col" class="rounded"');				$criteria = array('com_autofbtwitter_schedule.id_user'=>$this->session->userdata('userid'));		$empty_msg = '<div class="warning_box">You have not added any schedule yet. please add</div>';		$this->data['table'] = $this->create_table($conf,$cols,$actions,$this->MSchedule,$criteria,$empty_msg );				$this->view('schedule_tweet_list',$this->data);	}	 	function add(){				$this->load->helper('timezone');				$this->data['title'] = 'Schedule Tweets';		$this->data['jsfiles'] = array('jquery-ui-1.8.16.custom.min.js','ajaxfileupload.js');		$this->data['cssfiles'] = array('redmond/jquery-ui-1.8.16.custom.css');							$this->data['usernames'] = $this->get_twitter_users();		$this->data['schedule'] = null;		$this->view('schedule_tweet_entry',$this->data);	}	function edit(){		$id = $this->input->post('itemid');		if(empty($id))			die('invalid itemid');		$id = intval($id);		$this->model('MSchedule');		$criteria = array('com_autofbtwitter_schedule.id'=>$id,'com_autofbtwitter_schedule.id_user'=>intval($this->session->userdata('userid')));		$schedule = $this->MSchedule->get_by($criteria);		if($schedule==null)		{			$this->session->set_flashdata('error','schedule can not be found');			redirect(base_url('tweetscheduler/index') );			return;		}		$this->load->helper('timezone');				$this->data['title'] = 'Edit Schedule Tweets';		$this->data['jsfiles'] = array('jquery-ui-1.8.16.custom.min.js','ajaxfileupload.js');		$this->data['cssfiles'] = array('redmond/jquery-ui-1.8.16.custom.css');				$this->data['usernames'] =$this->get_twitter_users();		$this->data['schedule'] = $schedule[0];						$this->view('schedule_tweet_entry',$this->data);	}		function delete(){		$id = $this->input->post('itemid');		if(empty($id)){			$this->session->set_flashdata('error','Item id is empty');		}		$id = intval($id);		$this->model('MSchedule');		$criteria = array('com_autofbtwitter_schedule.id'=>$id,'com_autofbtwitter_schedule.id_user'=>intval($this->session->userdata('userid')));				$schedule = $this->MSchedule->get_by($criteria);		if($schedule==null){			$this->session->set_flashdata('error','Schedule can not be found');		}else{			if($this->MSchedule->delete($id)==TRUE){				$this->session->set_flashdata('info','Schedule deleted');			}else{				$this->session->set_flashdata('error','Schedule can not be deleted');			}		}		redirect(base_url('tweetscheduler/index') );	}		function upload_file(){		$status = "";		$msg = "";		$file_element_name = 'userfile';				$account_id = $this->input->post('params');		if(empty($account_id)){			echo json_encode(array('status'=>'error','msg'=>'account not found'));			exit(0);		}	   		$this->model('MAccount');		$tokens = $this->MAccount->get_twitter_token($this->session->userdata('userid'),$account_id);		if($tokens==null)		{			echo json_encode(array('status'=>'error','msg'=>'token not found'));			exit(0);		}		$token = $tokens[0];	   		$config['upload_path'] = '/opt/lampp/htdocs/uploads';		$config['allowed_types'] = 'gif|jpg|png';		$config['max_size']  = 1024 * 8;		$config['encrypt_name'] = TRUE; 		$this->load->library('upload', $config); 		if (!$this->upload->do_upload($file_element_name))		{			$status = 'error';			$msg = $this->upload->display_errors('', '');		}		else		{			$data = $this->upload->data();						require (dirname(__FILE__).'/lib/tmhOAuth.php');			require (dirname(__FILE__).'/lib/tmhUtilities.php');			require (dirname(__FILE__).'/lib/secret.php');			$tmhOAuth = new tmhOAuth(array(					 'consumer_key'    => $consumer_key,					 'consumer_secret' => $consumer_secret,					 'user_token'      => $token['oauth_token'],					 'user_secret'     => $token['oauth_token_secret'],			));						$image = $data['full_path'];			$code = $tmhOAuth->request( 'POST','https://upload.twitter.com/1/statuses/update_with_media.json',			   array(					'media[]'  => "@{$image};type=image/jpeg;filename={$image}",					'status'   => $data['orig_name'],			   ),				true, // use auth				true  // multipart			);			if ($code == 200){				//tmhUtilities::pr(json_decode($tmhOAuth->response['response']));				$status = "success";				//$msg = $tmhOAuth->response['response'];				$data = json_decode($tmhOAuth->response['response']);								$entities = $data->{'entities'};				$media =$entities->{'media'};				$xmedia = $media[0];				$msg = 'http://'.$xmedia->{'display_url'};			}else{				//tmhUtilities::pr($tmhOAuth->response['response']);				$status = "error";				$msg = 'Error uploading file to twitter';//$tmhOAuth->response['response'];			   			}				@unlink($image);							}		@unlink($_FILES[$file_element_name]);	   		echo json_encode(array('status' => $status, 'msg' => $msg));	}		function shorten_links(){		$text = $this->input->post('text');		if(empty($text)){			echo "";			exit(0);		}				// Explode the submited text		$pieces = explode(" ", $text);			if(count($pieces)>0){	 			require (dirname(__FILE__).'/lib/secret.php');			// For each element in array check if it is a link, shorten and replace it in passed text			foreach ($pieces as $piece) {				if($this->startsWith(trim($piece),'http://bit.ly'))					continue;				if (preg_match("/(^|[\n ])([\w]*?)((ht|f)tp(s)?:\/\/[\w]+[^ \,\"\n\r\t<]*)/is", $piece)) {					$newsmallurl = $this->get_bitly_short_url($piece,$bitly_username,$bitly_api_key);					if($newsmallurl!='INVALID_URI')						$text = str_replace($piece, $newsmallurl, $text);				}			}		}		echo $text;			}		/*process*/	function get_twitter_users(){		$this->model('MAccount');		$criteria = array('id_user'=>intval($this->session->userdata('userid')),'type'=>1);		$usernames = $this->MAccount->get_by($criteria);		$data =array();		foreach($usernames as $user){			$data[$user['id']] = $user['username'];		}		return $data;	}	function username_check($str)	{		$this->model('MAccount');		$account = $this->MAccount->get(intval($str));				if($account !=null){			if(intval($account['id_user'])==intval($this->session->userdata('userid'))){				return TRUE;			}		}		$this->form_validation->set_message('username_check','Invalid Username');		return FALSE;			}	function checkDate($date)	{		if (!isset($date) || $date=="")		{			return FALSE;		}	   		list($mm,$dd,$yy)=explode("/",$date);		if ($dd!="" && $mm!="" && $yy!="")		{			return checkdate($mm,$dd,$yy);		}	   		return FALSE;	}	function schedule_date_check($str){		if($this->checkDate($str)==FALSE){						$this->form_validation->set_message('schedule_date_check','Invalid Date');			return FALSE;		}		return TRUE;			}	function date_check($str){		if($this->checkDate($str)==FALSE){						$this->form_validation->set_message('date_check','Invalid Date');			return FALSE;		}		return TRUE;			}	function hhmm_check($str){		list($hh,$mm)=explode(":",$str);		if($hh!='' && $mm !=''){			if(intval($hh)>=0 && intval($hh)<24 && intval($mm)>=0 && intval($mm)<60){				return TRUE;			}					}		$this->form_validation->set_message('hhmm_check','Invalid Time');		return FALSE; 	}	function timezone_check($str){				try{			new DateTimeZone($str);		}catch(Exception $e){			$this->form_validation->set_message('timezone_check','Invalid Timezone');			return FALSE;		}		return TRUE;	}	function saveValidate()	{				$this->form_validation->set_rules('username', 'lang:Username', 'required|integer|callback_username_check');		$this->form_validation->set_rules('schedule_date', 'lang:Schedule date', 'required|callback_date_check');		$this->form_validation->set_rules('schedule_hhmm','lang:Schedule time', 'required|callback_hhmm_check');		$this->form_validation->set_rules('schedule_tz', 'lang:Time zone', 'required|callback_timezone_check');		$this->form_validation->set_rules('message', 'lang:Message', 'required');		return ($this->form_validation->run());	}	function save(){		if($this->saveValidate()==FALSE)		{			$this->add();			return;		}		else         		{						$this->model('MSchedule');						$schedule = $this->bind($this->MSchedule);			$schedule['com_autofbtwitter_account_id'] = intval($this->input->post('username'));						$schedule['id_user'] = intval($this->session->userdata('userid'));			if($this->MSchedule->save($schedule)==TRUE)								$this->session->set_flashdata('info','Schedule saved');			else				$this->session->set_flashdata('error','Error saving schedule');					}				redirect(base_url('tweetscheduler/index'));	}	//http://davidwalsh.name/bitly-api-php		function get_bitly_short_url($url,$login,$appkey,$format='txt') {	  $connectURL = 'http://api.bit.ly/v3/shorten?login='.$login.'&apiKey='.$appkey.'&uri='.urlencode($url).'&format='.$format;	  return $this->curl_get_result($connectURL);	}	function curl_get_result($url) {	  $ch = curl_init();	  $timeout = 5;	  curl_setopt($ch,CURLOPT_URL,$url);	  curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);	  curl_setopt($ch,CURLOPT_CONNECTTIMEOUT,$timeout);	  $data = curl_exec($ch);	  curl_close($ch);	  return $data;	}	function startsWith($haystack, $needle)	{		$length = strlen($needle);		return (substr($haystack, 0, $length) === $needle);	}	}?>